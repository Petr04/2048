:root {
	--size: 100px;
	--radius: 5px;
	--spacing: 13px;

	--timing-function: ease;
	--transition: .2s;
	--transition-move: .1s;

	--container-width: calc(var(--size) * var(--width) + var(--spacing) * (var(--width) - 1));
	--container-height: calc(var(--size) * var(--height) + var(--spacing) * (var(--height) - 1));
}

body, .block, .message {
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: row;
}

body {
	margin: 0;
	height: 100vh;

	font-family: roboto;
	font-size: 30px;
}

.container {
	position: relative;
	width: calc(var(--container-width) + var(--spacing) * 2);
	height: calc(var(--container-height) + var(--spacing) * 2);
}

.container > * {
	position: absolute;
	padding: var(--spacing);
	width: var(--container-width);
	height: var(--container-height);
}

.message {
	background: #fffa;
	font-weight: bold;
	font-size: 60px;
	transition: .3s;
}

.message.hidden {
	opacity: 0;
	visibility: hidden;
}

.message-container {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: space-around;
}

.buttons {
	display: flex;
	flex-direction: row;
	justify-content: space-around;
	width: 120%; /* It should be fixed to work with any number of buttons */
}

.button {
	font-size: 27px;
	cursor: pointer;
}

.field.bg {
	display: grid;
	grid-template-rows: repeat(var(--height), 1fr);
	grid-template-columns: repeat(var(--width), 1fr);
	grid-gap: var(--spacing);
}

.bg {
	border-radius: var(--radius);
	background: #aaa;
}

.bg .block {
	background: #bbb;
}

.block {
	width: var(--width);
	height: var(--height);
	border-radius: var(--radius);
	background: #e72828;
	user-select: none;
}

@keyframes block-appear-animation {
	0% {
		opacity: 0;
		transform: scaleX(0) scaleY(0);
	}

	100% {
		opacity: 1;
		transform: scaleX(1) scaleY(1);
	}
}

@keyframes block-merge-animation {
	0% {
		opacity: 0;
		transform: scaleX(0) scaleY(0);
	}

	50% {
		opacity: 1;
		transform: scaleX(1.1) scaleY(1.1);
	}

	100% {
		transform: scaleX(1) scaleY(1);
	}
}

.field:not(.bg) .block {
	position: absolute;
	transition: var(--transition-move);
	animation: var(--transition) var(--timing-function) 0s 1 block-appear-animation;
}

.field:not(.bg) .block.merge {
	animation: var(--transition) var(--timing-function) 0s 1 block-merge-animation;
}

a {
	text-decoration: none;
	color: #aaa;
	cursor: pointer;
}

a:hover {
	color: #bbb;
}
